<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="site.letterforyou.spring.board.mapper.BoardMapper">

	<select id="getBoardList"
		
		resultType="site.letterforyou.spring.board.domain.BoardVO">
		SELECT 
        b.board_no as boardNo,
        b.user_id as userId,
        b.board_title as boardTitle,
        b.regist_dt as registDate,
        b.board_view as boardView,
        b.board_thumbnail as boardThumbNail,
        COUNT(c.COMMENT_ID) as commentCount,
        COUNT(bl.BOARD_LIKE_NO) as likeCount
    FROM 
        (SELECT 
            board_no,
            user_id,
            board_title,
            regist_dt,
            board_view,
            board_thumbnail
        FROM tbl_board) b
    LEFT JOIN 
        TBL_COMMENT c ON b.BOARD_NO = c.BOARD_NO
    LEFT JOIN 
        TBL_BOARD_LIKE bl ON b.BOARD_NO = bl.BOARD_NO AND bl.LIKE_YN = 'Y'
    GROUP BY 
        b.board_no, b.user_id, b.board_title, b.regist_dt, b.board_view, b.board_thumbnail
    <choose>
        <when test="sortBy == 'comments'">
            ORDER BY commentCount ${inOrder} , registDate DESC
        </when>
        <when test="sortBy == 'likes'">
            ORDER BY likeCount ${inOrder} , registDate DESC
        </when>
        <when test="sortBy == 'views'">
        	ORDER BY boardView ${inOrder} , registDate DESC
        </when>
        <when test="sortBy == 'dates'">
        	ORDER BY registDate ${inOrder}
        </when>
        <otherwise>
            ORDER BY b.regist_dt DESC
        </otherwise>
    </choose>
    OFFSET 
        #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
	</select>
	
	<select id="getTotalCountBoard" resultType="int">
	select count(*) as totalCount
	from tbl_board
	where use_yn= 'Y'
	
	</select>
	<select id="getBoard" parameterType="_long" resultType="site.letterforyou.spring.board.domain.BoardVO">
	select board_no as boardNo ,
		user_id  as userId,
		board_title as boardTitle,
		board_content as boardContent ,
		regist_dt as registDate,
		board_view as boardView
		
		from tbl_board
		where board_no = #{boardNo}
	
	</select>
	
	 <select id ="getAttachByBoardNo" parameterType="_long" resultType="site.letterforyou.spring.board.domain.AttachVO">
	 select attach_no as attachNo, 
	 regist_dt as registDate,
	 file_path as filePath
	 from tbl_attach
	where board_no = #{boardNo}
	 </select>
	
	
	<select id="getBoardLikeCountByBoardNo" resultType="_long">
	
	select count(*) as boardLike
	from tbl_board_like
	where board_no=#{boardNo}
	</select>
	
<insert id="addBoard" useGeneratedKeys="true" parameterType="site.letterforyou.spring.board.domain.BoardVO" >
    INSERT INTO TBL_BOARD (board_no, user_id, board_title, board_content, board_thumbnail) 
    VALUES (TBL_BOARD_SEQ.NEXTVAL, #{userId}, #{boardTitle}, #{boardContent}, #{boardThumbNail})
</insert>

	
	
	<insert id="addAttach">
    INSERT INTO TBL_ATTACH (attach_no, board_no, file_path, original_file_nm, save_file_nm) 
    VALUES (TBL_ATTACH_SEQ.nextval, #{boardNo}, #{attachVo.filePath}, #{attachVo.originalFileNm}, #{attachVo.saveFileNm})
</insert>


<update id="modifyBoard">
    UPDATE TBL_BOARD 
    SET board_title = #{boardVo.boardTitle},
        board_content = #{boardVo.boardContent},
        regist_dt = CURRENT_TIMESTAMP,
        change_dt = CURRENT_TIMESTAMP
    WHERE board_no = #{boardNo}
</update>


<update id="deleteBoard">
UPDATE TBL_BOARD
SET use_yn = 'N'
where board_no=#{boardNo}
</update>






	
</mapper>